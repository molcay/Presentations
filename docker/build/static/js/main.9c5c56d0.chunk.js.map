{"version":3,"sources":["slides/01-Main.js","slides/02-Outline.js","slides/03.js","slides/04.js","slides/05.js","slides/06.js","slides/07.js","slides/00-Thanks.js","App.js","serviceWorker.js","index.js"],"names":["_01_Main","react_default","a","createElement","Fragment","className","aria-hidden","_02_Outline","_ref","titles","map","title","isCompleted","text","_03","_04","_05","_06","_07","_00_Thanks","href","App","react_impressjs","progress","fallbackMessage","id","data","x","y","z","rotateX","rotateY","scale","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c5c56d0.chunk.js","sourcesContent":["import React from 'react';\n\nexport default () => {\n  return (\n    <>\n      <q><b>Docker</b></q>\n      <hr />\n      <br />\n      <br />\n      <br />\n      <br />\n      <br />\n      <span className=\"footnote\">\n        <p>Muhammed Olcay TERCANLI</p>\n        <i className=\"fab fa-github\" aria-hidden=\"true\"></i> molcay <br />\n        <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i> molcay@mail.com\n      </span>\n    </>\n  )\n};\n","import React from 'react';\n\nexport default ({ titles }) => {\n  return (\n    <>\n      <q><b>Outline</b></q>\n      <hr />\n      <ul>\n        {\n          titles.map(title => (\n            <li className={(title.isCompleted ? 'completed' : '')}>{title.text}</li>\n          ))\n        }\n      </ul>\n    </>\n  )\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <>\n      <q><b>What is Container(s)?</b></q>\n      <hr />\n    </>\n  )\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <>\n      <q><b>Why we need Container(s)?</b></q>\n      <hr />\n    </>\n  )\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <>\n      <q><b>What is Docker?</b></q>\n      <hr />\n    </>\n  )\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <>\n      <q><b>Docker: Architecture</b></q>\n      <hr />\n    </>\n  )\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <>\n      <q><b>Docker: Dockerfile</b></q>\n      <hr />\n    </>\n  )\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <>\n      <p>Thank you for your attention</p>\n      <hr />\n\n      <span className=\"firstname\">Muhammed</span> <span className=\"middlename\">Olcay</span> <span className=\"lastname\">TERCANLI</span>\n      <span className=\"footnote\">\n        <a href=\"http://github.com/molcay\"><span className=\"github-icon\"><i className=\"fab fa-github\"></i></span> molcay </a><br />\n        <a href=\"mailto:molcay@mail.com\"><span className=\"email-icon\"><i className=\"fa fa-envelope\" aria-hidden=\"true\"></i></span> molcay@mail.com</a>\n      </span>\n    </>\n  )\n};","import React, { Component } from 'react';\nimport { Impress, Step } from 'react-impressjs';\n// Slides\nimport Main from './slides/01-Main';\nimport Outline from './slides/02-Outline';\nimport S03 from './slides/03';\nimport S04 from './slides/04';\nimport S05 from './slides/05';\nimport S06 from './slides/06';\nimport S07 from './slides/07';\nimport Thanks from './slides/00-Thanks';\n// Styles\n// styles of react-impressjs\n// import 'react-impressjs/styles/react-impressjs.css';\nimport 'react-impressjs/styles/impress-demo.css';\n\nconst titles = [\n  {\n    text: \"What is Container(s)?\",\n    isCompleted: true\n  },\n  {\n    text: \"Why we need Container(s)?\",\n    isCompleted: false\n  },\n  {\n    text: \"What is Docker?\",\n    isCompleted: false\n  },\n  {\n    text: \"Docker: Architecture\",\n    isCompleted: false\n  },\n  {\n    text: \"Docker: Dockerfile\",\n    isCompleted: false\n  },\n  {\n    text: \"Docker: Usage and/or Development Cycle\",\n    isCompleted: false\n  },\n  {\n    text: \"Docker: docker-compose\",\n    isCompleted: false\n  },\n]\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Impress\n          progress={true}\n          fallbackMessage={<p>Sorry, your <b>device or browser</b> couldn't support well.</p>}\n        >\n          <Step id={'main'} className={'slide'} data={{ x: -1000, y: -1500 }}>\n            <Main />\n          </Step>\n          <Step id={'outline'} className={'slide'} data={{ x: 0, y: -1500 }}>\n            <Outline titles={titles} />\n          </Step>\n          <Step id={'s03'} className={'slide'} data={{ x: 1000, y: -1500 }}>\n            <S03 />\n          </Step>\n          <Step id={'s04'} className={'slide'} data={{ x: 2000, y: -1500 }}>\n            <S04 />\n          </Step>\n          <Step id={'s05'} className={'slide'} data={{ x: 3000, y: -1500 }}>\n            <S05 />\n          </Step>\n          <Step id={'s06'} className={'slide'} data={{ x: -1000, y: -750 }}>\n            <S06 />\n          </Step>\n          <Step id={'s07'} className={'slide'} data={{ x: 0, y: -750 }}>\n            <S07 />\n          </Step>\n          <Step id={'thanks'} data={{ x: 3000, y: -750, z: -1000, \"rotateX\": 270, \"rotateY\": 45, scale: 1 }}>\n            <Thanks />\n          </Step>\n          <Step id={'overview'} data={{ x: 1000, y: 0, scale: 5 }} />\n        </Impress>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}